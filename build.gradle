apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8
version = '1.0.0'
archivesBaseName = project.name
group = "com.natpryce"
version = hasProperty("-version") ? property("-version") : "SNAPSHOT"

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'junit:junit:4.12'
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    compile 'com.scurrilous:uritemplate:1.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'

    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testCompile 'com.natpryce:snodge:1.3.4.2'
    testCompile 'com.google.guava:guava:18.0'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'worktoruke',
                   'Implementation-Vendor': 'com.natpryce',
                   'Implementation-Version': version
    }
}

javadoc {
    exclude "**/internal/**"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives jar, sourcesJar, javadocJar
}


signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

String publishUsername = hasProperty("ossrhUsername") ? property("ossrhUsername") : ""
String publishPassword = hasProperty("ossrhPassword") ? property("ossrhPassword") : ""

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { deployment -> signing.signPom(deployment) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: publishUsername, password: publishPassword)
        }
        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
            authentication(userName: publishUsername, password: publishPassword)
        }

        pom.project {
            name archivesBaseName
            packaging 'jar'
            description 'Manage test lifecycle by correlating failures with contents of an issue tracker.'
            url 'https://github.com/npryce/worktorule'

            scm {
                connection 'git@github.com:npryce/worktorule.git'
                url 'https://github.com/npryce/worktorule'
            }

            licenses {
                license {
                    name 'Apache License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0'                }
            }

            developers {
                developer {
                    id 'nat.pryce'
                    name 'Nat Pryce'
                }
            }
        }
    }
}
